{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "languageVersion": "2.0",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.36.1.42791",
            "templateHash": "16606806386269388523"
        }
    },
    "functions": [
        {
            "namespace": "__bicep",
            "members": {
                "subUuid": {
                    "parameters": [
                        {
                            "type": "string",
                            "name": "uuid"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[toLower(substring(parameters('uuid'), 24, 12))]"
                    }
                }
            }
        }
    ],
    "parameters": {
        "monitoredSubscriptions": {
            "type": "string"
        },
        "controlPlaneLocation": {
            "type": "string"
        },
        "controlPlaneSubscriptionId": {
            "type": "string"
        },
        "controlPlaneResourceGroupName": {
            "type": "string"
        },
        "datadogApiKey": {
            "type": "securestring",
            "metadata": {
                "description": "Datadog API Key"
            }
        },
        "datadogSite": {
            "type": "string",
            "metadata": {
                "description": "Datadog Site"
            }
        },
        "resourceTagFilters": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Comma separated list of tags to filter resources by"
            }
        },
        "piiScrubberRules": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "YAML formatted list of PII Scrubber Rules"
            }
        },
        "datadogTelemetry": {
            "type": "bool",
            "defaultValue": false
        },
        "logLevel": {
            "type": "string",
            "defaultValue": "INFO"
        },
        "imageRegistry": {
            "type": "string",
            "defaultValue": "datadoghq.azurecr.io"
        },
        "storageAccountUrl": {
            "type": "string",
            "defaultValue": "https://ddazurelfo.blob.core.windows.net"
        }
    },
    "variables": {
        "controlPlaneId": "[__bicep.subUuid(guid(managementGroup().id, parameters('controlPlaneSubscriptionId'), parameters('controlPlaneResourceGroupName'), parameters('controlPlaneLocation')))]"
    },
    "resources": {
        "controlPlaneResourceGroup": {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('controlPlaneResourceGroup-{0}', variables('controlPlaneId'))]",
            "subscriptionId": "[parameters('controlPlaneSubscriptionId')]",
            "location": "[deployment().location]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "controlPlaneResourceGroup": {
                        "value": "[parameters('controlPlaneResourceGroupName')]"
                    },
                    "controlPlaneLocation": {
                        "value": "[parameters('controlPlaneLocation')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.36.1.42791",
                            "templateHash": "9944890483561300022"
                        }
                    },
                    "parameters": {
                        "controlPlaneResourceGroup": {
                            "type": "string"
                        },
                        "controlPlaneLocation": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2021-04-01",
                            "name": "[parameters('controlPlaneResourceGroup')]",
                            "location": "[parameters('controlPlaneLocation')]"
                        }
                    ]
                }
            }
        },
        "validateConfig": {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('validateConfig-{0}', variables('controlPlaneId'))]",
            "subscriptionId": "[parameters('controlPlaneSubscriptionId')]",
            "resourceGroup": "[parameters('controlPlaneResourceGroupName')]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "datadogApiKey": {
                        "value": "[parameters('datadogApiKey')]"
                    },
                    "datadogSite": {
                        "value": "[parameters('datadogSite')]"
                    },
                    "piiScrubberRules": {
                        "value": "[parameters('piiScrubberRules')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.36.1.42791",
                            "templateHash": "17199287134101933310"
                        }
                    },
                    "parameters": {
                        "datadogApiKey": {
                            "type": "securestring"
                        },
                        "datadogSite": {
                            "type": "string"
                        },
                        "piiScrubberRules": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "name": "validateConfigScript",
                            "location": "[resourceGroup().location]",
                            "kind": "AzureCLI",
                            "properties": {
                                "azCliVersion": "2.67.0",
                                "environmentVariables": [
                                    {
                                        "name": "DD_API_KEY",
                                        "secureValue": "[parameters('datadogApiKey')]"
                                    },
                                    {
                                        "name": "DD_SITE",
                                        "value": "[parameters('datadogSite')]"
                                    },
                                    {
                                        "name": "PII_SCRUBBER_RULES",
                                        "value": "[parameters('piiScrubberRules')]"
                                    }
                                ],
                                "scriptContent": "      # Validate Datadog API key with chosen site\n      tdnf install -y jq\n      response=$(curl -X GET \"https://api.${DD_SITE}/api/v1/validate\" \\\n        -H \"Accept: application/json\" \\\n        -H \"DD-API-KEY: ${DD_API_KEY}\" 2>/dev/null)\n      if [ \"$(jq .valid <<<\"$response\")\" != 'true' ]; then\n        echo \"{\\\"Result\\\": {\\\"error\\\": \\\"Unable to validate API Key against Site '${DD_SITE}'. Please check that the correct Datadog host site was used and that the key is a valid Datadog API key found at https://app.datadoghq.com/organization-settings/api-keys\\\", \\\"response\\\": $response}}\" | jq | tee \"$AZ_SCRIPTS_OUTPUT_PATH\"\n        exit 1\n      fi\n\n      if [[ -z \"$PII_SCRUBBER_RULES\" ]]; then\n        exit 0\n      fi\n      \n      # Validate PII rules are parseable YAML \n      curl -sSLo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x /usr/local/bin/yq\n      yq_output=$(echo \"$PII_SCRUBBER_RULES\" | yq '.' 2>&1)\n      if [ $? -ne 0 ]; then\n        echo \"{\\\"Result\\\": {\\\"error\\\": \\\"Invalid YAML. Please provide a valid YAML file.\\\", \\\"details\\\": \\\"$yq_output\\\"}}\" | jq | tee \"$AZ_SCRIPTS_OUTPUT_PATH\"\n        exit 1\n      fi\n    ",
                                "timeout": "PT30M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "PT1H"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "controlPlaneResourceGroup"
            ]
        },
        "controlPlane": {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('controlPlane-{0}', variables('controlPlaneId'))]",
            "subscriptionId": "[parameters('controlPlaneSubscriptionId')]",
            "resourceGroup": "[parameters('controlPlaneResourceGroupName')]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "controlPlaneId": {
                        "value": "[variables('controlPlaneId')]"
                    },
                    "controlPlaneLocation": {
                        "value": "[parameters('controlPlaneLocation')]"
                    },
                    "controlPlaneResourceGroupName": {
                        "value": "[parameters('controlPlaneResourceGroupName')]"
                    },
                    "controlPlaneSubscriptionId": {
                        "value": "[parameters('controlPlaneSubscriptionId')]"
                    },
                    "monitoredSubscriptions": {
                        "value": "[parameters('monitoredSubscriptions')]"
                    },
                    "datadogApiKey": {
                        "value": "[parameters('datadogApiKey')]"
                    },
                    "datadogSite": {
                        "value": "[parameters('datadogSite')]"
                    },
                    "datadogTelemetry": {
                        "value": "[parameters('datadogTelemetry')]"
                    },
                    "resourceTagFilters": {
                        "value": "[parameters('resourceTagFilters')]"
                    },
                    "piiScrubberRules": {
                        "value": "[parameters('piiScrubberRules')]"
                    },
                    "imageRegistry": {
                        "value": "[parameters('imageRegistry')]"
                    },
                    "storageAccountUrl": {
                        "value": "[parameters('storageAccountUrl')]"
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.36.1.42791",
                            "templateHash": "6859530069127870232"
                        }
                    },
                    "parameters": {
                        "controlPlaneId": {
                            "type": "string"
                        },
                        "controlPlaneLocation": {
                            "type": "string"
                        },
                        "controlPlaneSubscriptionId": {
                            "type": "string"
                        },
                        "controlPlaneResourceGroupName": {
                            "type": "string"
                        },
                        "monitoredSubscriptions": {
                            "type": "string"
                        },
                        "imageRegistry": {
                            "type": "string"
                        },
                        "storageAccountUrl": {
                            "type": "string"
                        },
                        "datadogApiKey": {
                            "type": "securestring"
                        },
                        "datadogSite": {
                            "type": "string"
                        },
                        "piiScrubberRules": {
                            "type": "string"
                        },
                        "resourceTagFilters": {
                            "type": "string"
                        },
                        "datadogTelemetry": {
                            "type": "bool"
                        },
                        "logLevel": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "deployerTaskImage": "[format('{0}/deployer:latest', parameters('imageRegistry'))]",
                        "forwarderImage": "[format('{0}/forwarder:latest', parameters('imageRegistry'))]",
                        "STORAGE_CONNECTION_SETTING": "AzureWebJobsStorage",
                        "DD_SITE_SETTING": "DD_SITE",
                        "DD_API_KEY_SETTING": "DD_API_KEY",
                        "DD_TELEMETRY_SETTING": "DD_TELEMETRY",
                        "FORWARDER_IMAGE_SETTING": "FORWARDER_IMAGE",
                        "SUBSCRIPTION_ID_SETTING": "SUBSCRIPTION_ID",
                        "RESOURCE_GROUP_SETTING": "RESOURCE_GROUP",
                        "CONTROL_PLANE_REGION_SETTING": "CONTROL_PLANE_REGION",
                        "CONTROL_PLANE_ID_SETTING": "CONTROL_PLANE_ID",
                        "MONITORED_SUBSCRIPTIONS_SETTING": "MONITORED_SUBSCRIPTIONS",
                        "RESOURCE_TAG_FILTERS_SETTING": "RESOURCE_TAG_FILTERS",
                        "PII_SCRUBBER_RULES_SETTING": "PII_SCRUBBER_RULES",
                        "STORAGE_ACCOUNT_URL_SETTING": "STORAGE_ACCOUNT_URL",
                        "LOG_LEVEL_SETTING": "LOG_LEVEL",
                        "DD_API_KEY_SECRET": "dd-api-key",
                        "CONNECTION_STRING_SECRET": "connection-string",
                        "resourceTaskName": "[format('resources-task-{0}', parameters('controlPlaneId'))]",
                        "diagnosticSettingsTaskName": "[format('diagnostic-settings-task-{0}', parameters('controlPlaneId'))]",
                        "scalingTaskName": "[format('scaling-task-{0}', parameters('controlPlaneId'))]",
                        "deployerTaskName": "[format('deployer-task-{0}', parameters('controlPlaneId'))]",
                        "containerAppStartRoleName": "[format('ContainerAppStartRole{0}', parameters('controlPlaneId'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/serverfarms",
                            "apiVersion": "2022-09-01",
                            "name": "[format('control-plane-asp-{0}', parameters('controlPlaneId'))]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "kind": "linux",
                            "properties": {
                                "reserved": true
                            },
                            "sku": {
                                "tier": "Dynamic",
                                "name": "Y1"
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "name": "[format('lfostorage{0}', parameters('controlPlaneId'))]",
                            "kind": "StorageV2",
                            "location": "[parameters('controlPlaneLocation')]",
                            "properties": {
                                "accessTier": "Hot",
                                "minimumTlsVersion": "TLS1_2"
                            },
                            "sku": {
                                "name": "Standard_LRS"
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/fileServices",
                            "apiVersion": "2023-05-01",
                            "name": "[format('{0}/{1}', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]",
                            "properties": {},
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices",
                            "apiVersion": "2023-01-01",
                            "name": "[format('{0}/{1}', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]",
                            "properties": {},
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "apiVersion": "2023-01-01",
                            "name": "[format('{0}/{1}/{2}', format('lfostorage{0}', parameters('controlPlaneId')), 'default', 'control-plane-cache')]",
                            "properties": {},
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/sites",
                            "apiVersion": "2022-09-01",
                            "name": "[variables('resourceTaskName')]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "kind": "functionapp",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "siteConfig": {
                                    "appSettings": "[union(createArray(createObject('name', variables('STORAGE_CONNECTION_SETTING'), 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('DD_API_KEY_SETTING'), 'value', parameters('datadogApiKey')), createObject('name', variables('DD_SITE_SETTING'), 'value', parameters('datadogSite')), createObject('name', variables('DD_TELEMETRY_SETTING'), 'value', if(parameters('datadogTelemetry'), 'true', 'false')), createObject('name', variables('CONTROL_PLANE_ID_SETTING'), 'value', parameters('controlPlaneId')), createObject('name', 'AzureWebJobsFeatureFlags', 'value', 'EnableWorkerIndexing'), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'python'), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('LOG_LEVEL_SETTING'), 'value', parameters('logLevel'))), createArray(createObject('name', 'WEBSITE_CONTENTSHARE', 'value', variables('resourceTaskName')), createObject('name', variables('MONITORED_SUBSCRIPTIONS_SETTING'), 'value', parameters('monitoredSubscriptions')), createObject('name', variables('RESOURCE_TAG_FILTERS_SETTING'), 'value', parameters('resourceTagFilters'))))]",
                                    "linuxFxVersion": "Python|3.11"
                                },
                                "publicNetworkAccess": "Enabled",
                                "httpsOnly": true
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]",
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/sites",
                            "apiVersion": "2022-09-01",
                            "name": "[variables('diagnosticSettingsTaskName')]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "kind": "functionapp",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "siteConfig": {
                                    "appSettings": "[union(createArray(createObject('name', variables('STORAGE_CONNECTION_SETTING'), 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('DD_API_KEY_SETTING'), 'value', parameters('datadogApiKey')), createObject('name', variables('DD_SITE_SETTING'), 'value', parameters('datadogSite')), createObject('name', variables('DD_TELEMETRY_SETTING'), 'value', if(parameters('datadogTelemetry'), 'true', 'false')), createObject('name', variables('CONTROL_PLANE_ID_SETTING'), 'value', parameters('controlPlaneId')), createObject('name', 'AzureWebJobsFeatureFlags', 'value', 'EnableWorkerIndexing'), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'python'), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('LOG_LEVEL_SETTING'), 'value', parameters('logLevel'))), createArray(createObject('name', variables('RESOURCE_GROUP_SETTING'), 'value', parameters('controlPlaneResourceGroupName')), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', variables('resourceTaskName'))))]",
                                    "linuxFxVersion": "Python|3.11"
                                },
                                "publicNetworkAccess": "Enabled",
                                "httpsOnly": true
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]",
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/sites",
                            "apiVersion": "2022-09-01",
                            "name": "[variables('scalingTaskName')]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "kind": "functionapp",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "siteConfig": {
                                    "appSettings": "[union(createArray(createObject('name', variables('STORAGE_CONNECTION_SETTING'), 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('DD_API_KEY_SETTING'), 'value', parameters('datadogApiKey')), createObject('name', variables('DD_SITE_SETTING'), 'value', parameters('datadogSite')), createObject('name', variables('DD_TELEMETRY_SETTING'), 'value', if(parameters('datadogTelemetry'), 'true', 'false')), createObject('name', variables('CONTROL_PLANE_ID_SETTING'), 'value', parameters('controlPlaneId')), createObject('name', 'AzureWebJobsFeatureFlags', 'value', 'EnableWorkerIndexing'), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'python'), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)), createObject('name', variables('LOG_LEVEL_SETTING'), 'value', parameters('logLevel'))), createArray(createObject('name', variables('RESOURCE_GROUP_SETTING'), 'value', parameters('controlPlaneResourceGroupName')), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', variables('resourceTaskName')), createObject('name', variables('FORWARDER_IMAGE_SETTING'), 'value', variables('forwarderImage')), createObject('name', variables('CONTROL_PLANE_REGION_SETTING'), 'value', parameters('controlPlaneLocation')), createObject('name', variables('PII_SCRUBBER_RULES_SETTING'), 'value', parameters('piiScrubberRules'))))]",
                                    "linuxFxVersion": "Python|3.11"
                                },
                                "publicNetworkAccess": "Enabled",
                                "httpsOnly": true
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/serverfarms', format('control-plane-asp-{0}', parameters('controlPlaneId')))]",
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('lfostorage{0}', parameters('controlPlaneId')), 'default')]",
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.App/managedEnvironments",
                            "apiVersion": "2024-03-01",
                            "name": "[format('dd-log-forwarder-env-{0}-{1}', parameters('controlPlaneId'), parameters('controlPlaneLocation'))]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.App/jobs",
                            "apiVersion": "2024-03-01",
                            "name": "[variables('deployerTaskName')]",
                            "location": "[parameters('controlPlaneLocation')]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', format('dd-log-forwarder-env-{0}-{1}', parameters('controlPlaneId'), parameters('controlPlaneLocation')))]",
                                "configuration": {
                                    "triggerType": "Schedule",
                                    "scheduleTriggerConfig": {
                                        "cronExpression": "*/30 * * * *"
                                    },
                                    "replicaRetryLimit": 1,
                                    "replicaTimeout": 1800,
                                    "secrets": [
                                        {
                                            "name": "[variables('CONNECTION_STRING_SECRET')]",
                                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('lfostorage{0}', parameters('controlPlaneId')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId'))), '2019-06-01').keys[0].value)]"
                                        },
                                        {
                                            "name": "[variables('DD_API_KEY_SECRET')]",
                                            "value": "[parameters('datadogApiKey')]"
                                        }
                                    ]
                                },
                                "template": {
                                    "containers": [
                                        {
                                            "name": "[variables('deployerTaskName')]",
                                            "image": "[variables('deployerTaskImage')]",
                                            "resources": {
                                                "cpu": "[json('0.5')]",
                                                "memory": "1Gi"
                                            },
                                            "env": [
                                                {
                                                    "name": "[variables('STORAGE_CONNECTION_SETTING')]",
                                                    "secretRef": "[variables('CONNECTION_STRING_SECRET')]"
                                                },
                                                {
                                                    "name": "[variables('SUBSCRIPTION_ID_SETTING')]",
                                                    "value": "[parameters('controlPlaneSubscriptionId')]"
                                                },
                                                {
                                                    "name": "[variables('RESOURCE_GROUP_SETTING')]",
                                                    "value": "[parameters('controlPlaneResourceGroupName')]"
                                                },
                                                {
                                                    "name": "[variables('CONTROL_PLANE_ID_SETTING')]",
                                                    "value": "[parameters('controlPlaneId')]"
                                                },
                                                {
                                                    "name": "[variables('CONTROL_PLANE_REGION_SETTING')]",
                                                    "value": "[parameters('controlPlaneLocation')]"
                                                },
                                                {
                                                    "name": "[variables('DD_API_KEY_SETTING')]",
                                                    "secretRef": "[variables('DD_API_KEY_SECRET')]"
                                                },
                                                {
                                                    "name": "[variables('DD_SITE_SETTING')]",
                                                    "value": "[parameters('datadogSite')]"
                                                },
                                                {
                                                    "name": "[variables('DD_TELEMETRY_SETTING')]",
                                                    "value": "[if(parameters('datadogTelemetry'), 'true', 'false')]"
                                                },
                                                {
                                                    "name": "[variables('STORAGE_ACCOUNT_URL_SETTING')]",
                                                    "value": "[parameters('storageAccountUrl')]"
                                                },
                                                {
                                                    "name": "[variables('LOG_LEVEL_SETTING')]",
                                                    "value": "[parameters('logLevel')]"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.App/managedEnvironments', format('dd-log-forwarder-env-{0}-{1}', parameters('controlPlaneId'), parameters('controlPlaneLocation')))]",
                                "[resourceId('Microsoft.Storage/storageAccounts', format('lfostorage{0}', parameters('controlPlaneId')))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid('deployer', parameters('controlPlaneId'))]",
                            "properties": {
                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'de139f84-1756-47ae-9be6-808fbbe84772')]",
                                "principalId": "[reference(resourceId('Microsoft.App/jobs', variables('deployerTaskName')), '2024-03-01', 'full').identity.principalId]"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.App/jobs', variables('deployerTaskName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2023-01-31",
                            "name": "[format('initialRunIdentity{0}', parameters('controlPlaneId'))]",
                            "location": "[parameters('controlPlaneLocation')]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleDefinitions",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(variables('containerAppStartRoleName'))]",
                            "properties": {
                                "roleName": "[variables('containerAppStartRoleName')]",
                                "description": "Custom role to start container app jobs",
                                "type": "customRole",
                                "permissions": [
                                    {
                                        "actions": [
                                            "Microsoft.App/jobs/start/action"
                                        ]
                                    }
                                ],
                                "assignableScopes": [
                                    "[resourceGroup().id]"
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid('initialRunContainerAppRoleAssignment', parameters('controlPlaneId'))]",
                            "properties": {
                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('containerAppStartRoleName')))]",
                                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('initialRunIdentity{0}', parameters('controlPlaneId'))), '2023-01-31').principalId]",
                                "principalType": "ServicePrincipal"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('containerAppStartRoleName')))]",
                                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('initialRunIdentity{0}', parameters('controlPlaneId')))]"
                            ]
                        }
                    ],
                    "outputs": {
                        "resourceTaskPrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Web/sites', variables('resourceTaskName')), '2022-09-01', 'full').identity.principalId]"
                        },
                        "diagnosticSettingsTaskPrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Web/sites', variables('diagnosticSettingsTaskName')), '2022-09-01', 'full').identity.principalId]"
                        },
                        "scalingTaskPrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Web/sites', variables('scalingTaskName')), '2022-09-01', 'full').identity.principalId]"
                        },
                        "initialRunIdentityPrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('initialRunIdentity{0}', parameters('controlPlaneId'))), '2023-01-31').principalId]"
                        },
                        "initialRunIdentityId": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('initialRunIdentity{0}', parameters('controlPlaneId')))]"
                        },
                        "storageAccountName": {
                            "type": "string",
                            "value": "[format('lfostorage{0}', parameters('controlPlaneId'))]"
                        }
                    }
                }
            },
            "dependsOn": [
                "controlPlaneResourceGroup",
                "validateConfig"
            ]
        },
        "subscriptionPermissions": {
            "copy": {
                "name": "subscriptionPermissions",
                "count": "[length(json(parameters('monitoredSubscriptions')))]"
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('subscriptionPermissions-{0}-{1}', __bicep.subUuid(json(parameters('monitoredSubscriptions'))[copyIndex()]), variables('controlPlaneId'))]",
            "subscriptionId": "[json(parameters('monitoredSubscriptions'))[copyIndex()]]",
            "location": "[deployment().location]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "resourceGroupName": {
                        "value": "[parameters('controlPlaneResourceGroupName')]"
                    },
                    "location": {
                        "value": "[parameters('controlPlaneLocation')]"
                    },
                    "controlPlaneId": {
                        "value": "[variables('controlPlaneId')]"
                    },
                    "resourceTaskPrincipalId": {
                        "value": "[reference('controlPlane').outputs.resourceTaskPrincipalId.value]"
                    },
                    "diagnosticSettingsTaskPrincipalId": {
                        "value": "[reference('controlPlane').outputs.diagnosticSettingsTaskPrincipalId.value]"
                    },
                    "scalingTaskPrincipalId": {
                        "value": "[reference('controlPlane').outputs.scalingTaskPrincipalId.value]"
                    },
                    "initialRunIdentityPrincipalId": {
                        "value": "[reference('controlPlane').outputs.initialRunIdentityPrincipalId.value]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.36.1.42791",
                            "templateHash": "11639239557558669491"
                        }
                    },
                    "parameters": {
                        "resourceGroupName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "controlPlaneId": {
                            "type": "string"
                        },
                        "resourceTaskPrincipalId": {
                            "type": "string"
                        },
                        "diagnosticSettingsTaskPrincipalId": {
                            "type": "string"
                        },
                        "scalingTaskPrincipalId": {
                            "type": "string"
                        },
                        "initialRunIdentityPrincipalId": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2021-04-01",
                            "name": "[parameters('resourceGroupName')]",
                            "location": "[parameters('location')]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(subscription().id, 'resourceTask', parameters('controlPlaneId'))]",
                            "properties": {
                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                                "principalId": "[parameters('resourceTaskPrincipalId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(subscription().id, 'monitor', 'diagnosticSettings', parameters('controlPlaneId'))]",
                            "properties": {
                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                                "principalId": "[parameters('diagnosticSettingsTaskPrincipalId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(subscription().id, 'initialRunMonitoringContributor', parameters('controlPlaneId'))]",
                            "properties": {
                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                                "principalId": "[parameters('initialRunIdentityPrincipalId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2022-09-01",
                            "name": "[format('resourceGroupPermissions-{0}', parameters('controlPlaneId'))]",
                            "resourceGroup": "[parameters('resourceGroupName')]",
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                    "controlPlaneId": {
                                        "value": "[parameters('controlPlaneId')]"
                                    },
                                    "diagnosticSettingsTaskPrincipalId": {
                                        "value": "[parameters('diagnosticSettingsTaskPrincipalId')]"
                                    },
                                    "scalingTaskPrincipalId": {
                                        "value": "[parameters('scalingTaskPrincipalId')]"
                                    },
                                    "initialRunPrincipalId": {
                                        "value": "[parameters('initialRunIdentityPrincipalId')]"
                                    }
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "metadata": {
                                        "_generator": {
                                            "name": "bicep",
                                            "version": "0.36.1.42791",
                                            "templateHash": "11145468383612167352"
                                        }
                                    },
                                    "parameters": {
                                        "controlPlaneId": {
                                            "type": "string"
                                        },
                                        "diagnosticSettingsTaskPrincipalId": {
                                            "type": "string"
                                        },
                                        "scalingTaskPrincipalId": {
                                            "type": "string"
                                        },
                                        "initialRunPrincipalId": {
                                            "type": "string"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "type": "Microsoft.Authorization/roleAssignments",
                                            "apiVersion": "2022-04-01",
                                            "name": "[guid(subscription().id, 'storage', 'diagnosticSettings', parameters('controlPlaneId'))]",
                                            "properties": {
                                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'c12c1c16-33a1-487b-954d-41c89c60f349')]",
                                                "principalId": "[parameters('diagnosticSettingsTaskPrincipalId')]"
                                            }
                                        },
                                        {
                                            "type": "Microsoft.Authorization/roleAssignments",
                                            "apiVersion": "2022-04-01",
                                            "name": "[guid(subscription().id, 'scaling', parameters('controlPlaneId'))]",
                                            "properties": {
                                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                                "principalId": "[parameters('scalingTaskPrincipalId')]"
                                            }
                                        },
                                        {
                                            "type": "Microsoft.Authorization/roleAssignments",
                                            "apiVersion": "2022-04-01",
                                            "name": "[guid(subscription().id, 'initialRunContributor', parameters('controlPlaneId'))]",
                                            "properties": {
                                                "description": "[format('ddlfo{0}', parameters('controlPlaneId'))]",
                                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                                "principalId": "[parameters('initialRunPrincipalId')]"
                                            }
                                        }
                                    ]
                                }
                            },
                            "dependsOn": [
                                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
                            ]
                        }
                    ]
                }
            },
            "dependsOn": [
                "controlPlane"
            ]
        },
        "initialRun": {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('initialRun-{0}', variables('controlPlaneId'))]",
            "subscriptionId": "[parameters('controlPlaneSubscriptionId')]",
            "resourceGroup": "[parameters('controlPlaneResourceGroupName')]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "controlPlaneId": {
                        "value": "[variables('controlPlaneId')]"
                    },
                    "initialRunIdentity": {
                        "value": "[reference('controlPlane').outputs.initialRunIdentityId.value]"
                    },
                    "storageAccountName": {
                        "value": "[reference('controlPlane').outputs.storageAccountName.value]"
                    },
                    "datadogApiKey": {
                        "value": "[parameters('datadogApiKey')]"
                    },
                    "datadogSite": {
                        "value": "[parameters('datadogSite')]"
                    },
                    "datadogTelemetry": {
                        "value": "[parameters('datadogTelemetry')]"
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]"
                    },
                    "monitoredSubscriptions": {
                        "value": "[parameters('monitoredSubscriptions')]"
                    },
                    "piiScrubberRules": {
                        "value": "[parameters('piiScrubberRules')]"
                    },
                    "resourceTagFilters": {
                        "value": "[parameters('resourceTagFilters')]"
                    },
                    "forwarderImage": {
                        "value": "[format('{0}/forwarder:latest', parameters('imageRegistry'))]"
                    },
                    "storageAccountUrl": {
                        "value": "[parameters('storageAccountUrl')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.36.1.42791",
                            "templateHash": "7469765700743293840"
                        }
                    },
                    "parameters": {
                        "initialRunIdentity": {
                            "type": "string"
                        },
                        "controlPlaneId": {
                            "type": "string"
                        },
                        "storageAccountName": {
                            "type": "string"
                        },
                        "datadogApiKey": {
                            "type": "securestring"
                        },
                        "datadogSite": {
                            "type": "string"
                        },
                        "datadogTelemetry": {
                            "type": "bool"
                        },
                        "logLevel": {
                            "type": "string"
                        },
                        "monitoredSubscriptions": {
                            "type": "string"
                        },
                        "forwarderImage": {
                            "type": "string"
                        },
                        "piiScrubberRules": {
                            "type": "string"
                        },
                        "resourceTagFilters": {
                            "type": "string"
                        },
                        "storageAccountUrl": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2023-08-01",
                            "name": "initialRun",
                            "location": "[resourceGroup().location]",
                            "kind": "AzureCLI",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[format('{0}', parameters('initialRunIdentity'))]": {}
                                }
                            },
                            "properties": {
                                "storageAccountSettings": {
                                    "storageAccountName": "[parameters('storageAccountName')]",
                                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
                                },
                                "environmentVariables": [
                                    {
                                        "name": "AzureWebJobsStorage",
                                        "secureValue": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
                                    },
                                    {
                                        "name": "DD_API_KEY",
                                        "secureValue": "[parameters('datadogApiKey')]"
                                    },
                                    {
                                        "name": "DD_SITE",
                                        "value": "[parameters('datadogSite')]"
                                    },
                                    {
                                        "name": "DD_TELEMETRY",
                                        "value": "[if(parameters('datadogTelemetry'), 'true', 'false')]"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ID",
                                        "value": "[parameters('controlPlaneId')]"
                                    },
                                    {
                                        "name": "FORWARDER_IMAGE",
                                        "value": "[parameters('forwarderImage')]"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_REGION",
                                        "value": "[resourceGroup().location]"
                                    },
                                    {
                                        "name": "RESOURCE_GROUP",
                                        "value": "[resourceGroup().name]"
                                    },
                                    {
                                        "name": "SUBSCRIPTION_ID",
                                        "value": "[subscription().subscriptionId]"
                                    },
                                    {
                                        "name": "LOG_LEVEL",
                                        "value": "[parameters('logLevel')]"
                                    },
                                    {
                                        "name": "MONITORED_SUBSCRIPTIONS",
                                        "value": "[parameters('monitoredSubscriptions')]"
                                    },
                                    {
                                        "name": "PII_SCRUBBER_RULES",
                                        "value": "[parameters('piiScrubberRules')]"
                                    },
                                    {
                                        "name": "RESOURCE_TAG_FILTERS",
                                        "value": "[parameters('resourceTagFilters')]"
                                    }
                                ],
                                "azCliVersion": "2.67.0",
                                "primaryScriptUri": "[format('{0}/lfo/initial_run.sh', parameters('storageAccountUrl'))]",
                                "timeout": "PT30M",
                                "retentionInterval": "PT1H",
                                "cleanupPreference": "OnSuccess"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "controlPlane",
                "subscriptionPermissions"
            ]
        }
    }
}